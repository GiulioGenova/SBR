<<<<<<< HEAD
library(polynom)
password='roMonaLisa$14pr'
user='ROeuracMonalisa'
host='95.171.35.104'
round="day"
#datestart=Sys.Date()-4
datestart="2018-08-31"
dateend="2018-10-25"
station=names_file[which(names_file$name%in%c("Latsch_3",
"Latsch_1",
"Latsch_4",
"Girlan_1",
"Gries_2",
"Unterrain_2",
"Tramin_13er",
"Nals_2",
"Terlan_3")),"id"]
texture <- read.csv("texture_metadata.csv",header = T,sep = ",",dec = ".")
db_SBR_res <- get_BR_data(station = station,
datestart = datestart,
dateend = dateend,
user = user,password = password,host=host,
add_names = T,
spread = T,round = round) %>%
dplyr::select(TimeStamp,name,BWP20_mean,BWP40_mean,BWC20_mean,BWC40mean)
db_SBR_res <- get_BR_data(station = station,
datestart = datestart,
dateend = dateend,
user = user,password = password,host=host,
add_names = T,
spread = T,round = round) %>%
dplyr::select(TimeStamp,name,BWP20_mean,BWP40_mean,BWC20_mean,BWC40_mean)
db_SBR_res <- db_SBR_res %>% gather(sensor,value,-TimeStamp,-name)
library(tidyr)
library(dplyr)
db_SBR_res <- db_SBR_res %>% gather(sensor,value,-TimeStamp,-name)
texture$BWP <- paste0(texture$BWP,"mean")
texture$BWC <- paste0(texture$BWC,"mean")
BWC <- texture %>%
dplyr::select(name,BWC,abbrUSDA,abbrDE.BK94,textFingerprobe,depth) %>%
gather(measure,sensor,BWC)
BWP <- texture %>%
dplyr::select(name,BWP,abbrUSDA,abbrDE.BK94,textFingerprobe,depth) %>%
gather(measure,sensor,BWP)
text <- bind_rows(BWC,BWP)
df <- left_join(db_SBR_res,text) %>% filter(!is.na(value))
df <- df %>% spread(measure,value)
df1 <- df %>%  select(-BWP,-sensor) %>% filter(!is.na(BWC))
df2 <- df %>%  select(-BWC,-sensor) %>% filter(!is.na(BWP))
df <- left_join(df1,df2)
=======
scale_fill_manual(values=c("Irrig"="red", "NoIrrig"="green"))+
#coord_flip()+
theme(panel.background = element_rect(fill = NA),
panel.grid.major = element_blank(),#element_line(linetype = "dashed",colour = "grey"),
axis.text.x=element_blank(),
# axis.text.y=element_text(face = "plain",size = axis_text_size,colour = "black"),
axis.title.y = element_blank(),
axis.title.x =  element_blank(),
#axis.title.x = element_text(size = axis_title_size),#,margin = margin(r=20,l=20)
legend.position = "top"#,
# legend.title = element_text(size=legend_text_size),
# legend.text = element_text(size = legend_text_size,margin = 10),
# legend.key = element_rect(colour = "#f1fafc"),#size = 2
# legend.key.size = unit(3, 'lines'),
# axis.line.x = element_line(colour = "black",size=1.2)
)
p <- ggplot(wb, aes(x="a",y=as.character(TimeStamp))) +#
geom_tile(aes(fill=irrigAdvise,width=0.05, height=1),#hjust = 0.1,
color="white",show.legend = T,size=1.5)#
p + geom_image(x = 1.1, aes(image = img),size=.1) +
#coord_flip() +
#expand_limits(x = c(1,1.1))  +
coord_cartesian(xlim = c(1, 1.1))+
coor
p + geom_image(x = 1.1, aes(image = img),size=.1) +
#coord_flip() +
#expand_limits(x = c(1,1.1))  +
coord_cartesian(xlim = c(1, 1.1))+
scale_fill_manual(values=c("Irrig"="red", "NoIrrig"="green"))+
#coord_flip()+
theme(panel.background = element_rect(fill = NA),
panel.grid.major = element_blank(),#element_line(linetype = "dashed",colour = "grey"),
axis.text.x=element_blank(),
# axis.text.y=element_text(face = "plain",size = axis_text_size,colour = "black"),
axis.title.y = element_blank(),
axis.title.x =  element_blank(),
#axis.title.x = element_text(size = axis_title_size),#,margin = margin(r=20,l=20)
legend.position = "top"#,
# legend.title = element_text(size=legend_text_size),
# legend.text = element_text(size = legend_text_size,margin = 10),
# legend.key = element_rect(colour = "#f1fafc"),#size = 2
# legend.key.size = unit(3, 'lines'),
# axis.line.x = element_line(colour = "black",size=1.2)
)
p <- ggplot(wb, aes(y=as.character(TimeStamp))) +#
geom_tile(aes(x="a",fill=irrigAdvise,width=0.05, height=1),#hjust = 0.1,
color="white",show.legend = T,size=1.5)#
p + geom_image(x = 1.1, aes(image = img),size=.1) +
#coord_flip() +
#expand_limits(x = c(1,1.1))  +
coord_cartesian(xlim = c(1, 1.1))+
scale_fill_manual(values=c("Irrig"="red", "NoIrrig"="green"))+
#coord_flip()+
theme(panel.background = element_rect(fill = NA),
panel.grid.major = element_blank(),#element_line(linetype = "dashed",colour = "grey"),
axis.text.x=element_blank(),
# axis.text.y=element_text(face = "plain",size = axis_text_size,colour = "black"),
axis.title.y = element_blank(),
axis.title.x =  element_blank(),
#axis.title.x = element_text(size = axis_title_size),#,margin = margin(r=20,l=20)
legend.position = "top"#,
# legend.title = element_text(size=legend_text_size),
# legend.text = element_text(size = legend_text_size,margin = 10),
# legend.key = element_rect(colour = "#f1fafc"),#size = 2
# legend.key.size = unit(3, 'lines'),
# axis.line.x = element_line(colour = "black",size=1.2)
)
p <- ggplot(wb, aes(y=as.character(TimeStamp))) +#
geom_tile(aes(x="a",fill=irrigAdvise,width=0.05, height=1),#hjust = 0.1,
color="white",show.legend = T,size=1.5)#
p + geom_image(x = 1.1, aes(image = img),size=.1) +
#coord_flip() +
#expand_limits(x = c(1,1.1))  +
coord_cartesian(xlim = c(1, 1.1),expand = F)+
scale_fill_manual(values=c("Irrig"="red", "NoIrrig"="green"))+
#coord_flip()+
theme(panel.background = element_rect(fill = NA),
panel.grid.major = element_blank(),#element_line(linetype = "dashed",colour = "grey"),
axis.text.x=element_blank(),
# axis.text.y=element_text(face = "plain",size = axis_text_size,colour = "black"),
axis.title.y = element_blank(),
axis.title.x =  element_blank(),
#axis.title.x = element_text(size = axis_title_size),#,margin = margin(r=20,l=20)
legend.position = "top"#,
# legend.title = element_text(size=legend_text_size),
# legend.text = element_text(size = legend_text_size,margin = 10),
# legend.key = element_rect(colour = "#f1fafc"),#size = 2
# legend.key.size = unit(3, 'lines'),
# axis.line.x = element_line(colour = "black",size=1.2)
)
p <- ggplot(wb, aes(y=as.character(TimeStamp))) +#
geom_tile(aes(x="a",fill=irrigAdvise,width=0.05, height=1),#hjust = 0.1,
color="white",show.legend = T,size=1.5)#
p + geom_image(x = 1.01, aes(image = img),size=.1) +
#coord_flip() +
#expand_limits(x = c(1,1.1))  +
coord_cartesian(xlim = c(1, 1.02),expand = F)+
scale_fill_manual(values=c("Irrig"="red", "NoIrrig"="green"))+
#coord_flip()+
theme(panel.background = element_rect(fill = NA),
panel.grid.major = element_blank(),#element_line(linetype = "dashed",colour = "grey"),
axis.text.x=element_blank(),
# axis.text.y=element_text(face = "plain",size = axis_text_size,colour = "black"),
axis.title.y = element_blank(),
axis.title.x =  element_blank(),
#axis.title.x = element_text(size = axis_title_size),#,margin = margin(r=20,l=20)
legend.position = "top"#,
# legend.title = element_text(size=legend_text_size),
# legend.text = element_text(size = legend_text_size,margin = 10),
# legend.key = element_rect(colour = "#f1fafc"),#size = 2
# legend.key.size = unit(3, 'lines'),
# axis.line.x = element_line(colour = "black",size=1.2)
)
p <- ggplot(wb, aes(y=as.character(TimeStamp))) +#
geom_tile(aes(x="a",fill=irrigAdvise,width=0.0005, height=1),#hjust = 0.1,
color="white",show.legend = T,size=1.5)#
p + geom_image(x = 1.01, aes(image = img),size=.1) +
#coord_flip() +
#expand_limits(x = c(1,1.1))  +
coord_cartesian(xlim = c(1, 1.02),expand = F)+
scale_fill_manual(values=c("Irrig"="red", "NoIrrig"="green"))+
#coord_flip()+
theme(panel.background = element_rect(fill = NA),
panel.grid.major = element_blank(),#element_line(linetype = "dashed",colour = "grey"),
axis.text.x=element_blank(),
# axis.text.y=element_text(face = "plain",size = axis_text_size,colour = "black"),
axis.title.y = element_blank(),
axis.title.x =  element_blank(),
#axis.title.x = element_text(size = axis_title_size),#,margin = margin(r=20,l=20)
legend.position = "top"#,
# legend.title = element_text(size=legend_text_size),
# legend.text = element_text(size = legend_text_size,margin = 10),
# legend.key = element_rect(colour = "#f1fafc"),#size = 2
# legend.key.size = unit(3, 'lines'),
# axis.line.x = element_line(colour = "black",size=1.2)
)
p <- ggplot(wb, aes(y=as.character(TimeStamp))) +#
geom_tile(aes(x="a",fill=irrigAdvise,width=0.005, height=1),#hjust = 0.1,
color="white",show.legend = T,size=1.5)#
p + geom_image(x = 1.01, aes(image = img),size=.1) +
#coord_flip() +
#expand_limits(x = c(1,1.1))  +
coord_cartesian(xlim = c(1, 1.02),expand = F)+
scale_fill_manual(values=c("Irrig"="red", "NoIrrig"="green"))+
#coord_flip()+
theme(panel.background = element_rect(fill = NA),
panel.grid.major = element_blank(),#element_line(linetype = "dashed",colour = "grey"),
axis.text.x=element_blank(),
# axis.text.y=element_text(face = "plain",size = axis_text_size,colour = "black"),
axis.title.y = element_blank(),
axis.title.x =  element_blank(),
#axis.title.x = element_text(size = axis_title_size),#,margin = margin(r=20,l=20)
legend.position = "top"#,
# legend.title = element_text(size=legend_text_size),
# legend.text = element_text(size = legend_text_size,margin = 10),
# legend.key = element_rect(colour = "#f1fafc"),#size = 2
# legend.key.size = unit(3, 'lines'),
# axis.line.x = element_line(colour = "black",size=1.2)
)
p <- ggplot(wb, aes(y=as.character(TimeStamp))) +#
geom_tile(aes(x="a",fill=irrigAdvise,width=0.005, height=1),#hjust = 0.1,
color="white",show.legend = T)#,size=1.5
p + geom_image(x = 1.01, aes(image = img),size=.1) +
#coord_flip() +
#expand_limits(x = c(1,1.1))  +
coord_cartesian(xlim = c(1, 1.02),expand = F)+
scale_fill_manual(values=c("Irrig"="red", "NoIrrig"="green"))+
#coord_flip()+
theme(panel.background = element_rect(fill = NA),
panel.grid.major = element_blank(),#element_line(linetype = "dashed",colour = "grey"),
axis.text.x=element_blank(),
# axis.text.y=element_text(face = "plain",size = axis_text_size,colour = "black"),
axis.title.y = element_blank(),
axis.title.x =  element_blank(),
#axis.title.x = element_text(size = axis_title_size),#,margin = margin(r=20,l=20)
legend.position = "top"#,
# legend.title = element_text(size=legend_text_size),
# legend.text = element_text(size = legend_text_size,margin = 10),
# legend.key = element_rect(colour = "#f1fafc"),#size = 2
# legend.key.size = unit(3, 'lines'),
# axis.line.x = element_line(colour = "black",size=1.2)
)
p <- ggplot(wb, aes(y=as.character(TimeStamp))) +#
geom_tile(aes(x="a",fill=irrigAdvise,width=0.005, height=1),#hjust = 0.1,
color="white",show.legend = T,size=1.5)#
p + geom_image(x = 1, aes(image = img),size=.1) +
#coord_flip() +
#expand_limits(x = c(1,1.1))  +
coord_cartesian(xlim = c(1, 1.02),expand = F)+
scale_fill_manual(values=c("Irrig"="red", "NoIrrig"="green"))+
#coord_flip()+
theme(panel.background = element_rect(fill = NA),
panel.grid.major = element_blank(),#element_line(linetype = "dashed",colour = "grey"),
axis.text.x=element_blank(),
# axis.text.y=element_text(face = "plain",size = axis_text_size,colour = "black"),
axis.title.y = element_blank(),
axis.title.x =  element_blank(),
#axis.title.x = element_text(size = axis_title_size),#,margin = margin(r=20,l=20)
legend.position = "top"#,
# legend.title = element_text(size=legend_text_size),
# legend.text = element_text(size = legend_text_size,margin = 10),
# legend.key = element_rect(colour = "#f1fafc"),#size = 2
# legend.key.size = unit(3, 'lines'),
# axis.line.x = element_line(colour = "black",size=1.2)
)
p <- ggplot(wb, aes(y=as.character(TimeStamp))) +#
geom_tile(aes(x="a",fill=irrigAdvise,width=0.005, height=1),#hjust = 0.1,
color="white",show.legend = T,size=1.5)#
p + geom_image(x = 1, aes(image = img),size=.1) +
#coord_flip() +
#expand_limits(x = c(1,1.1))  +
coord_cartesian(xlim = c(1, 1.001),expand = F)+
scale_fill_manual(values=c("Irrig"="red", "NoIrrig"="green"))+
#coord_flip()+
theme(panel.background = element_rect(fill = NA),
panel.grid.major = element_blank(),#element_line(linetype = "dashed",colour = "grey"),
axis.text.x=element_blank(),
# axis.text.y=element_text(face = "plain",size = axis_text_size,colour = "black"),
axis.title.y = element_blank(),
axis.title.x =  element_blank(),
#axis.title.x = element_text(size = axis_title_size),#,margin = margin(r=20,l=20)
legend.position = "top"#,
# legend.title = element_text(size=legend_text_size),
# legend.text = element_text(size = legend_text_size,margin = 10),
# legend.key = element_rect(colour = "#f1fafc"),#size = 2
# legend.key.size = unit(3, 'lines'),
# axis.line.x = element_line(colour = "black",size=1.2)
)
p <- ggplot(wb, aes(y=as.character(TimeStamp))) +#
geom_tile(aes(x="a",fill=irrigAdvise,width=0.005),#hjust = 0.1,, height=1
color="white",show.legend = T,size=1.5)#
p + geom_image(x = 1, aes(image = img),size=.1) +
#coord_flip() +
#expand_limits(x = c(1,1.1))  +
coord_cartesian(xlim = c(1, 1.001),expand = F)+
scale_fill_manual(values=c("Irrig"="red", "NoIrrig"="green"))+
#coord_flip()+
theme(panel.background = element_rect(fill = NA),
panel.grid.major = element_blank(),#element_line(linetype = "dashed",colour = "grey"),
axis.text.x=element_blank(),
# axis.text.y=element_text(face = "plain",size = axis_text_size,colour = "black"),
axis.title.y = element_blank(),
axis.title.x =  element_blank(),
#axis.title.x = element_text(size = axis_title_size),#,margin = margin(r=20,l=20)
legend.position = "top"#,
# legend.title = element_text(size=legend_text_size),
# legend.text = element_text(size = legend_text_size,margin = 10),
# legend.key = element_rect(colour = "#f1fafc"),#size = 2
# legend.key.size = unit(3, 'lines'),
# axis.line.x = element_line(colour = "black",size=1.2)
)
p <- ggplot(wb, aes(y=as.character(TimeStamp))) +#
geom_tile(aes(x="a",fill=irrigAdvise,width=0.005),#hjust = 0.1,, height=1
color="white",show.legend = T,size=1.5)#
p + geom_image(x = 1, aes(image = img),size=.1) +
#coord_flip() +
#expand_limits(x = c(1,1.1))  +
coord_cartesian(xlim = c(1, 2),expand = F)+
scale_fill_manual(values=c("Irrig"="red", "NoIrrig"="green"))+
#coord_flip()+
theme(panel.background = element_rect(fill = NA),
panel.grid.major = element_blank(),#element_line(linetype = "dashed",colour = "grey"),
axis.text.x=element_blank(),
# axis.text.y=element_text(face = "plain",size = axis_text_size,colour = "black"),
axis.title.y = element_blank(),
axis.title.x =  element_blank(),
#axis.title.x = element_text(size = axis_title_size),#,margin = margin(r=20,l=20)
legend.position = "top"#,
# legend.title = element_text(size=legend_text_size),
# legend.text = element_text(size = legend_text_size,margin = 10),
# legend.key = element_rect(colour = "#f1fafc"),#size = 2
# legend.key.size = unit(3, 'lines'),
# axis.line.x = element_line(colour = "black",size=1.2)
)
p <- ggplot(wb, aes(y=as.character(TimeStamp))) +#
geom_tile(aes(x="a",fill=irrigAdvise,width=0.005),#hjust = 0.1,, height=1
color="white",show.legend = T,size=1.5)#
p + geom_image(x = 1.5, aes(image = img),size=.1) +
#coord_flip() +
#expand_limits(x = c(1,1.1))  +
coord_cartesian(xlim = c(1, 2),expand = F)+
scale_fill_manual(values=c("Irrig"="red", "NoIrrig"="green"))+
#coord_flip()+
theme(panel.background = element_rect(fill = NA),
panel.grid.major = element_blank(),#element_line(linetype = "dashed",colour = "grey"),
axis.text.x=element_blank(),
# axis.text.y=element_text(face = "plain",size = axis_text_size,colour = "black"),
axis.title.y = element_blank(),
axis.title.x =  element_blank(),
#axis.title.x = element_text(size = axis_title_size),#,margin = margin(r=20,l=20)
legend.position = "top"#,
# legend.title = element_text(size=legend_text_size),
# legend.text = element_text(size = legend_text_size,margin = 10),
# legend.key = element_rect(colour = "#f1fafc"),#size = 2
# legend.key.size = unit(3, 'lines'),
# axis.line.x = element_line(colour = "black",size=1.2)
)
p <- ggplot(wb, aes(y=as.character(TimeStamp))) +#
geom_tile(aes(x="a",fill=irrigAdvise,width=0.005),#hjust = 0.1,, height=1
color="white",show.legend = T,size=1.5)#
p + geom_image(x = 1.8, aes(image = img),size=.1) +
#coord_flip() +
#expand_limits(x = c(1,1.1))  +
coord_cartesian(xlim = c(1, 2),expand = F)+
scale_fill_manual(values=c("Irrig"="red", "NoIrrig"="green"))+
#coord_flip()+
theme(panel.background = element_rect(fill = NA),
panel.grid.major = element_blank(),#element_line(linetype = "dashed",colour = "grey"),
axis.text.x=element_blank(),
# axis.text.y=element_text(face = "plain",size = axis_text_size,colour = "black"),
axis.title.y = element_blank(),
axis.title.x =  element_blank(),
#axis.title.x = element_text(size = axis_title_size),#,margin = margin(r=20,l=20)
legend.position = "top"#,
# legend.title = element_text(size=legend_text_size),
# legend.text = element_text(size = legend_text_size,margin = 10),
# legend.key = element_rect(colour = "#f1fafc"),#size = 2
# legend.key.size = unit(3, 'lines'),
# axis.line.x = element_line(colour = "black",size=1.2)
)
p <- ggplot(wb, aes(y=as.character(TimeStamp))) +#
geom_tile(aes(x="a",fill=irrigAdvise,width=1),#hjust = 0.1,, height=1
color="white",show.legend = T,size=1.5)#
p + geom_image(x = 1.8, aes(image = img),size=.1) +
#coord_flip() +
#expand_limits(x = c(1,1.1))  +
coord_cartesian(xlim = c(1, 2),expand = F)+
scale_fill_manual(values=c("Irrig"="red", "NoIrrig"="green"))+
#coord_flip()+
theme(panel.background = element_rect(fill = NA),
panel.grid.major = element_blank(),#element_line(linetype = "dashed",colour = "grey"),
axis.text.x=element_blank(),
# axis.text.y=element_text(face = "plain",size = axis_text_size,colour = "black"),
axis.title.y = element_blank(),
axis.title.x =  element_blank(),
#axis.title.x = element_text(size = axis_title_size),#,margin = margin(r=20,l=20)
legend.position = "top"#,
# legend.title = element_text(size=legend_text_size),
# legend.text = element_text(size = legend_text_size,margin = 10),
# legend.key = element_rect(colour = "#f1fafc"),#size = 2
# legend.key.size = unit(3, 'lines'),
# axis.line.x = element_line(colour = "black",size=1.2)
)
library(SBR)
run_app()
run_app('irrigApple')
>>>>>>> 63a8a2cc47c2bee7bea1419e8764a98f43c9f2bc
library(SBR)
run_app('irrigApple')
library(SBR)
run_app('irrigApple')
library(SBR)
run_app('irrigApple')
library(SBR)
run_app('irrigApple')
library(SBR)
run_app('irrigApple')
library(SBR)
run_app('irrigApple')
dstr <- 6
url <- sprintf("http://daten.buergernetz.bz.it/services/weather/district/%s/bulletin?format=json&lang=en",
dstr)
#url <- "http://daten.buergernetz.bz.it/services/weather/district/1/bulletin?format=json&lang=en"
u <- GET(url) %>% content
library(httr)
#url <- "http://daten.buergernetz.bz.it/services/weather/district/1/bulletin?format=json&lang=en"
u <- GET(url) %>% content
View(u)
sapply(u[[4]], "[[", "date")
ui <- cbind(sapply(u[[4]], "[[", "date"),
sapply(u[[4]], "[[", "rainFrom"),
sapply(u[[4]], "[[", "rainTo"),
sapply(u[[4]], "[[", "temperatureMax"),
sapply(u[[4]], "[[", "temperatureMin")
) %>%
sapply(u[[4]], "[[", "symbol")
sapply(u[[4]], "[[", "symbol")
ui <- cbind(sapply(u[[4]], "[[", "date"),
sapply(u[[4]], "[[", "rainFrom"),
sapply(u[[4]], "[[", "rainTo"),
sapply(u[[4]], "[[", "temperatureMax"),
sapply(u[[4]], "[[", "temperatureMin")
) %>%
bind(sapply(u[[4]], "[[", "symbol"))
ui <- cbind(sapply(u[[4]], "[[", "date"),
sapply(u[[4]], "[[", "rainFrom"),
sapply(u[[4]], "[[", "rainTo"),
sapply(u[[4]], "[[", "temperatureMax"),
sapply(u[[4]], "[[", "temperatureMin")
) %>%
cbind(sapply(u[[4]], "[[", "symbol"))
ui <- cbind(sapply(u[[4]], "[[", "date"),
sapply(u[[4]], "[[", "rainFrom"),
sapply(u[[4]], "[[", "rainTo"),
sapply(u[[4]], "[[", "temperatureMax"),
sapply(u[[4]], "[[", "temperatureMin")
) %>%
rbind(sapply(u[[4]], "[[", "symbol"))
u[[4]]$symbol
u[[4]][["symbol"]]
sapply(u[[4]], "[[", "symbol")
l<-sapply(u[[4]], "[[", "symbol")
View(l)
l<-sapply(u[[4]], "[", "symbol")
View(l)
l$symbol
l<-sapply(u[[4]], "[[3", "symbol")
l<-sapply(u[[4]], "[[", "symbol[[3]]")
sapply(u[[4]], "[[", "symbol")
sapply(u[[4]], "[", "symbol")
l<-sapply(u[[4]], "[", "symbol")
sapply(l,"[[", "imageUrl")
l<-sapply(u[[4]], "[", "symbol")
l<-sapply(l,"[[", "imageUrl") %>% as.tibble
sapply(l,"[[", "imageUrl")
library(tibble)
l<-sapply(u[[4]], "[", "symbol")
l<-sapply(l,"[[", "imageUrl") %>% as.tibble
View(l)
View(l)
ui <- cbind(sapply(u[[4]], "[[", "date"),
sapply(u[[4]], "[[", "rainFrom"),
sapply(u[[4]], "[[", "rainTo"),
sapply(u[[4]], "[[", "temperatureMax"),
sapply(u[[4]], "[[", "temperatureMin"),
l
) %>%
as.tibble
View(ui)
library(SBR)
library(SBR)
password='roMonaLisa$14pr'
user='ROeuracMonalisa'
host='95.171.35.104'
round="hour"
#datestart=Sys.Date()-4
datestart="2018-11-08"
#dateend="2018-10-25"
long=11.457978
lat=46.657158
provSensor=c("N","GS")#,"WG"
db <- mergeData(long = long,lat = lat,
datestart = datestart,
#dateend = dateend,
provSensor = provSensor,
password = password,user = user,host = host)
et <- ET(db)
df <- mergeOldAndForecast(data = et,long = long,lat = lat)
wb <- WB(df)
View(wb)
View(df)
forecast(long = long,lat = lat)
library(SBR)
forecast(long = long,lat = lat)
run_app()
run_app('irrigApple')
run_app('irrigApple')
names_file_sp
library(SBR)
run_app('irrigApple')
library(SBR)
run_app('irrigApple')
library(SBR)
run_app('irrigApple')
devtools::install_github("GiulioGenova/SBR")
install.packages(processx)
install.packages("processx")
devtools::install_github("GiulioGenova/SBR")
library(SBR)
devtools::install_github("GiulioGenova/SBR")
library(SBR)
run_app('irrigApple')
library(SBR)
run_app()
run_app('dataBrowser')
View(get_BR_data)
library(SBR)
library(SBR)
run_app('dataBrowser')
run_app('dataBrowser')
library(SBR)
run_app('dataBrowser')
library(SBR)
run_app('dataBrowser')
library(SBR)
run_app('dataBrowser')
library(SBR)
run_app('dataBrowser')
library(SBR)
run_app('dataBrowser')
remove.packages("SBR")
devtools::install_github("GiulioGenova/SBR")
run_app('dataBrowser')
library(SBR)
library(SBR)
run_app('dataBrowser')
library(SBR)
run_app('dataBrowser')
library(SBR)
run_app('dataBrowser')
remove.packages("SBR")
devtools::install_github("GiulioGenova/SBR")
run_app('dataBrowser',launchBrowser = F)
system("ipconfig", intern=TRUE)
run_app('dataBrowser',launchBrowser = T)
x<-TRUE
x!=TRUE
x=FALSE
x!=TRUE
library(SBR)
run_app('dataBrowser',launchBrowser = T)
run_app('dataBrowser',launchBrowser = F)
run_app('dataBrowser',launchBrowser = NULL)

